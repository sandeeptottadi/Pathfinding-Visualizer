{"version":3,"sources":["Navbar/Navbar.js","Node/node.js","Navbar/option.js","Algorithms/Dijkstra.js","animate.js","board/board.js","App.js","reportWebVitals.js","context.js","index.js"],"names":["Nav_bar","props","useState","algorithm","setAlgorithm","setAlgo","algo","document","getElementById","className","Navbar","variant","expand","Brand","style","marginLeft","color","href","display","flexDirection","justifyContent","alignItems","onClick","clear","id","run","NavDropdown","title","Item","disabled","Divider","node","isStartNode","isFinishNode","isWall","onMouseUp","mouseUp","onMouseDown","mouseDown","row","col","onMouseEnter","mouseEnter","option","shortestPath","finishNode","path","pre","previous","push","reverse","animate","paths","visitedNodes","i","setTimeout","length","alert","animatePath","Board","state","board_array","mouseIsEntered","size","window","innerWidth","startNode","m","Math","floor","n","innerHeight","addEventListener","a","w","setState","reset","this","isMouseEntered","array","m_array","j","distance","Infinity","newNode","newArray","plotWall","map","nodes","newMap","getAllNodes","sort","b","currentNode","shift","visited","neighbors","getNeighbors","forEach","neighbor","updateDistance","Dijkstra","console","log","Fragment","rowIdx","colIdx","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","context","createContext","start_i","start_j","finish_i","finish_j","ReactDOM","render","StrictMode","Provider","value"],"mappings":"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","file":"static/js/main.0d7cda26.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Navbar, NavDropdown } from \"react-bootstrap\";\r\nimport \"./Navbar.css\";\r\n\r\nexport default function Nav_bar(props) {\r\n  const [algorithm, setAlgorithm] = useState(\"\");\r\n  function setAlgo(algo) {\r\n    document.getElementById(\"run\").className = \"list button\";\r\n    setAlgorithm(algo);\r\n  }\r\n  return (\r\n    <div>\r\n      <Navbar className=\"navbar\" variant=\"k\" expand=\"lg\">\r\n        <div className=\"cont\">\r\n          <div>\r\n            <Navbar.Brand\r\n              className=\"title\"\r\n              style={{ marginLeft: \"20px\", color: \"white\" }}\r\n              href=\"#home\"\r\n            >\r\n              Pathfinding Visualizer\r\n            </Navbar.Brand>\r\n          </div>\r\n          <div className=\"buttons\">\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <button className=\"list button\" onClick={() => props.clear()}>\r\n                Clear\r\n              </button>\r\n              <button\r\n                className=\"list disabled\"\r\n                id=\"run\"\r\n                onClick={() => props.run(algorithm)}\r\n              >\r\n                Run {algorithm}!\r\n              </button>\r\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                <NavDropdown title={\"Algorithms\"} id=\"nav-dropdown\">\r\n                  <NavDropdown.Item disabled=\"true\" href=\"#action/3.4\">\r\n                    Select an Algorithm\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Divider />\r\n                  <NavDropdown.Item\r\n                    onClick={() => setAlgo(\"Dijkstra\")}\r\n                    href=\"#action/3.1\"\r\n                  >\r\n                    Dijkstra\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item\r\n                    onClick={() => setAlgo(\"Breath First Search\")}\r\n                    href=\"#action/3.2\"\r\n                  >\r\n                    Breath First Search\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item\r\n                    onClick={() => setAlgo(\"Depth First Search\")}\r\n                    href=\"#action/3.3\"\r\n                  >\r\n                    Depth First Search\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./node.css\";\r\n\r\nexport default function node(props) {\r\n  let className = props.isStartNode\r\n    ? \"node startNode\"\r\n    : props.isFinishNode\r\n    ? \"node finishNode\"\r\n    : props.isWall\r\n    ? \"node wall\"\r\n    : \"node\";\r\n  return (\r\n    <div\r\n      onMouseUp={() => props.mouseUp()}\r\n      onMouseDown={() => props.mouseDown(props.row, props.col)}\r\n      onMouseEnter={() => props.mouseEnter(props.row, props.col)}\r\n      id={`${props.row}-${props.col}`}\r\n      className={className}\r\n    ></div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./option.css\";\r\n\r\nexport default function option() {\r\n  return <div className=\"option-container\">option</div>;\r\n}\r\n","export function Dijkstra(startNode, finishNode, map) {\r\n  let visitedNodes = [];\r\n  map[startNode.m][startNode.n].distance = 0;\r\n  let nodes = getAllNodes(map);\r\n  while (nodes.length > 0) {\r\n    nodes.sort((a, b) => {\r\n      return a.distance - b.distance;\r\n    });\r\n    let currentNode = nodes.shift();\r\n    if (currentNode.isWall) {\r\n      continue;\r\n    }\r\n    if (!currentNode.visited) {\r\n      visitedNodes.push(currentNode);\r\n    }\r\n    if (currentNode.distance === Infinity) {\r\n      let path = [];\r\n      return { visitedNodes, path };\r\n    }\r\n    if (currentNode.row === finishNode.m && currentNode.col === finishNode.n) {\r\n      let path = shortestPath(currentNode);\r\n      return { visitedNodes, path };\r\n    }\r\n    let neighbors = getNeighbors(currentNode, map);\r\n    neighbors.forEach((neighbor) => {\r\n      if (!neighbor.isWall) {\r\n        updateDistance(currentNode, neighbor);\r\n      }\r\n    });\r\n  }\r\n  let path = shortestPath(map[finishNode.m][finishNode.n]);\r\n  return { visitedNodes, path };\r\n}\r\n\r\nfunction getAllNodes(map) {\r\n  let newMap = [];\r\n  for (let i = 0; i < map.length; i++) {\r\n    for (let j = 0; j < map[0].length; j++) {\r\n      newMap.push(map[i][j]);\r\n    }\r\n  }\r\n  return newMap;\r\n}\r\n\r\nfunction getNeighbors(currentNode, map) {\r\n  let neighbors = [];\r\n  if (currentNode.row > 0) {\r\n    neighbors.push(map[currentNode.row - 1][currentNode.col]);\r\n  }\r\n  if (currentNode.row < map.length - 1) {\r\n    neighbors.push(map[currentNode.row + 1][currentNode.col]);\r\n  }\r\n  if (currentNode.col > 0) {\r\n    neighbors.push(map[currentNode.row][currentNode.col - 1]);\r\n  }\r\n  if (currentNode.col < map[0].length - 1) {\r\n    neighbors.push(map[currentNode.row][currentNode.col + 1]);\r\n  }\r\n  return neighbors;\r\n}\r\n\r\nfunction updateDistance(currentNode, neighbor) {\r\n  if (currentNode.distance + 1 < neighbor.distance) {\r\n    neighbor.distance = currentNode.distance + 1;\r\n    neighbor.previous = currentNode;\r\n  }\r\n}\r\n\r\nfunction shortestPath(finishNode) {\r\n  let path = [];\r\n  let pre = finishNode.previous;\r\n  while (pre !== null) {\r\n    path.push(pre);\r\n    pre = pre.previous;\r\n  }\r\n  return path.reverse();\r\n}\r\n","export function animate(paths) {\r\n  let { visitedNodes, path } = paths;\r\n  for (let i = 0; i < visitedNodes.length; i++) {\r\n    if (i === 0) {\r\n      continue;\r\n    }\r\n    setTimeout(() => {\r\n      if (i !== visitedNodes.length - 1) {\r\n        document.getElementById(\r\n          `${visitedNodes[i].row}-${visitedNodes[i].col}`\r\n        ).className = \"node visitedNode\";\r\n      }\r\n    }, i * 10);\r\n    setTimeout(() => {\r\n      if (i === visitedNodes.length - 1) {\r\n        animatePath(path);\r\n      }\r\n    }, i * 10);\r\n  }\r\n}\r\nfunction animatePath(path) {\r\n  if (path.length === 0) {\r\n    alert(\"No Way found!\");\r\n  }\r\n  for (let i = 0; i < path.length; i++) {\r\n    if (i === 0) {\r\n      continue;\r\n    }\r\n    setTimeout(() => {\r\n      document.getElementById(`${path[i].row}-${path[i].col}`).className =\r\n        \"node path\";\r\n    }, i * 30);\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./board.css\";\r\nimport Nav from \"../Navbar/Navbar\";\r\nimport Node from \"../Node/node\";\r\nimport Option from \"../Navbar/option\";\r\nimport { Dijkstra } from \"../Algorithms/Dijkstra\";\r\nimport { animate } from \"../animate\";\r\n\r\nexport default class Board extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      board_array: [],\r\n      mouseIsEntered: false,\r\n      size: window.innerWidth <= 700 ? 22 : 28,\r\n      startNode: {\r\n        m: Math.floor(\r\n          Math.floor(window.innerWidth / (window.innerWidth <= 700 ? 22 : 28)) /\r\n            2 -\r\n            Math.floor(\r\n              window.innerWidth / (window.innerWidth <= 700 ? 22 : 28)\r\n            ) /\r\n              4\r\n        ),\r\n        n: Math.floor(\r\n          Math.floor(\r\n            (window.innerHeight - 170) / (window.innerWidth <= 700 ? 22 : 28)\r\n          ) / 2\r\n        ),\r\n      },\r\n      finishNode: {\r\n        m: Math.floor(\r\n          Math.floor(window.innerWidth / (window.innerWidth <= 700 ? 22 : 28)) /\r\n            2 +\r\n            Math.floor(\r\n              window.innerWidth / (window.innerWidth <= 700 ? 22 : 28)\r\n            ) /\r\n              4\r\n        ),\r\n        n: Math.floor(\r\n          Math.floor(\r\n            (window.innerHeight - 170) / (window.innerWidth <= 700 ? 22 : 28)\r\n          ) / 2\r\n        ),\r\n      },\r\n      m: Math.floor(window.innerWidth / (window.innerWidth <= 700 ? 22 : 28)),\r\n      n: Math.floor(\r\n        (window.innerHeight - 170) / (window.innerWidth <= 700 ? 22 : 28)\r\n      ),\r\n    };\r\n    window.addEventListener(\"resize\", async () => {\r\n      let w = 28;\r\n      if (window.innerWidth <= 700) {\r\n        w = 22;\r\n      }\r\n      this.setState({\r\n        startNode: {\r\n          m: Math.floor(\r\n            Math.floor(window.innerWidth / w) / 2 -\r\n              Math.floor(window.innerWidth / w) / 4\r\n          ),\r\n          n: Math.floor(Math.floor((window.innerHeight - 170) / w) / 2),\r\n        },\r\n        finishNode: {\r\n          m: Math.floor(\r\n            Math.floor(window.innerWidth / w) / 2 +\r\n              Math.floor(window.innerWidth / w) / 4\r\n          ),\r\n          n: Math.floor(Math.floor((window.innerHeight - 170) / w) / 2),\r\n        },\r\n        m: Math.floor(window.innerWidth / w),\r\n        n: Math.floor((window.innerHeight - 170) / w),\r\n        size: w,\r\n      });\r\n      this.reset();\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.reset();\r\n  }\r\n  reset() {\r\n    let m = this.state.m;\r\n    let n = this.state.n;\r\n    this.setState({\r\n      isMouseEntered: false,\r\n    });\r\n    let array = [];\r\n    for (let i = 0; i < m; i++) {\r\n      let m_array = [];\r\n      for (let j = 0; j < n; j++) {\r\n        m_array.push({\r\n          row: i,\r\n          col: j,\r\n          isWall: false,\r\n          isStartNode:\r\n            i === this.state.startNode.m && j === this.state.startNode.n,\r\n          isFinishNode:\r\n            i === this.state.finishNode.m && j === this.state.finishNode.n,\r\n          previous: null,\r\n          distance: Infinity,\r\n        });\r\n      }\r\n      array.push(m_array);\r\n    }\r\n    this.setState({\r\n      board_array: array,\r\n    });\r\n  }\r\n  clear() {\r\n    let m = this.state.m;\r\n    let n = this.state.n;\r\n    let array = [];\r\n    for (let i = 0; i < m; i++) {\r\n      let m_array = [];\r\n      for (let j = 0; j < n; j++) {\r\n        m_array.push({\r\n          row: i,\r\n          col: j,\r\n          isWall: false,\r\n          isStartNode:\r\n            i === this.state.startNode.m && j === this.state.startNode.n,\r\n          isFinishNode:\r\n            i === this.state.finishNode.m && j === this.state.finishNode.n,\r\n          previous: null,\r\n          distance: Infinity,\r\n        });\r\n        if (i === this.state.startNode.m && j === this.state.startNode.n) {\r\n          document.getElementById(`${i}-${j}`).className = \"node startNode\";\r\n        } else if (\r\n          i === this.state.finishNode.m &&\r\n          j === this.state.finishNode.n\r\n        ) {\r\n          document.getElementById(`${i}-${j}`).className = \"node finishNode\";\r\n        } else {\r\n          document.getElementById(`${i}-${j}`).className = \"node\";\r\n        }\r\n      }\r\n      array.push(m_array);\r\n    }\r\n    this.setState({\r\n      isMouseEntered: false,\r\n      board_array: array,\r\n    });\r\n  }\r\n\r\n  plotWall(m, n) {\r\n    let array = this.state.board_array;\r\n    let node = array[m][n];\r\n    if (!node.isWall) {\r\n      let newNode = {\r\n        ...node,\r\n        isWall: !node.isWall,\r\n      };\r\n      array[m][n] = newNode;\r\n    } else {\r\n      setTimeout(() => {\r\n        let newNode = {\r\n          ...node,\r\n          isWall: !node.isWall,\r\n        };\r\n        array[m][n] = newNode;\r\n      }, 200);\r\n    }\r\n    return array;\r\n  }\r\n  mouseDown(m, n) {\r\n    let newArray = this.plotWall(m, n);\r\n    this.setState({\r\n      board_array: newArray,\r\n      mouseIsEntered: true,\r\n    });\r\n  }\r\n  mouseUp() {\r\n    this.setState({\r\n      mouseIsEntered: false,\r\n    });\r\n  }\r\n  mouseEnter(m, n) {\r\n    if (!this.state.mouseIsEntered) return;\r\n    let newArray = this.plotWall(m, n);\r\n    this.setState({\r\n      board_array: newArray,\r\n    });\r\n  }\r\n  run(algo) {\r\n    if (algo === \" \") {\r\n      return;\r\n    } else if (algo === \"Dijkstra\") {\r\n      let dijkstra = Dijkstra(\r\n        this.state.startNode,\r\n        this.state.finishNode,\r\n        this.state.board_array\r\n      );\r\n      animate(dijkstra);\r\n    } else if (algo === \"Breath First Search\") {\r\n      console.log(algo);\r\n    } else if (algo === \"Depth First Search\") {\r\n      console.log(algo);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Nav clear={() => this.clear()} run={(algo) => this.run(algo)} />\r\n        <Option />\r\n        <div className=\"col\">\r\n          {this.state.board_array.map((row, rowIdx) => {\r\n            return (\r\n              <div key={rowIdx} className=\"c\">\r\n                {row.map((col, colIdx) => {\r\n                  return (\r\n                    <Node\r\n                      row={rowIdx}\r\n                      col={colIdx}\r\n                      key={rowIdx - colIdx}\r\n                      mouseUp={() => this.mouseUp()}\r\n                      mouseEnter={(m, n) => this.mouseEnter(m, n)}\r\n                      mouseDown={(m, n) => this.mouseDown(m, n)}\r\n                      isWall={col.isWall}\r\n                      isStartNode={col.isStartNode}\r\n                      isFinishNode={col.isFinishNode}\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import \"./App.css\";\nimport Board from \"./board/board\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createContext } from \"react\";\r\n\r\nexport const context = createContext({\r\n  i: null,\r\n  j: null,\r\n  start_i: null,\r\n  start_j: null,\r\n  finish_i: null,\r\n  finish_j: null,\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { context } from \"./context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <context.Provider\n      value={{\n        i: null,\n        j: null,\n        start_i: null,\n        start_j: null,\n        finish_i: null,\n        finish_j: null,\n      }}\n    >\n      <App />\n    </context.Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}