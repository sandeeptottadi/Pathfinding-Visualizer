{"version":3,"sources":["Navbar/Navbar.js","Node/node.js","Navbar/option.js","Algorithms/Dijkstra.js","animate.js","board/board.js","App.js","reportWebVitals.js","context.js","index.js"],"names":["Nav_bar","props","useState","algorithm","setAlgorithm","setAlgo","algo","document","getElementById","className","Navbar","variant","expand","Brand","style","marginLeft","color","href","display","flexDirection","justifyContent","alignItems","onClick","clear","id","run","NavDropdown","title","Item","disabled","Divider","node","isStartNode","isFinishNode","isWall","onMouseUp","mouseUp","onMouseDown","mouseDown","row","col","onMouseEnter","mouseEnter","option","shortestPath","finishNode","path","pre","previous","push","reverse","animate","paths","visitedNodes","i","setTimeout","length","animatePath","Board","state","board_array","mouseIsEntered","startNode","m","Math","floor","window","innerWidth","n","innerHeight","addEventListener","a","setState","reset","resize","this","isMouseEntered","array","m_array","j","distance","Infinity","newNode","newArray","plotWall","map","nodes","newMap","getAllNodes","sort","b","currentNode","shift","visited","neighbors","getNeighbors","forEach","neighbor","updateDistance","Dijkstra","console","log","Fragment","rowIdx","colIdx","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","context","createContext","start_i","start_j","finish_i","finish_j","ReactDOM","render","StrictMode","Provider","value"],"mappings":"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","file":"static/js/main.f4c77699.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Navbar, NavDropdown } from \"react-bootstrap\";\r\nimport \"./Navbar.css\";\r\n\r\nexport default function Nav_bar(props) {\r\n  const [algorithm, setAlgorithm] = useState(\"\");\r\n  function setAlgo(algo) {\r\n    document.getElementById(\"run\").className = \"list button\";\r\n    setAlgorithm(algo);\r\n  }\r\n  return (\r\n    <div>\r\n      <Navbar className=\"navbar\" variant=\"k\" expand=\"lg\">\r\n        <div className=\"cont\">\r\n          <div>\r\n            <Navbar.Brand\r\n              className=\"title\"\r\n              style={{ marginLeft: \"20px\", color: \"white\" }}\r\n              href=\"#home\"\r\n            >\r\n              Pathfinding Visualizer\r\n            </Navbar.Brand>\r\n          </div>\r\n          <div className=\"buttons\">\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <button className=\"list button\" onClick={() => props.clear()}>\r\n                Clear\r\n              </button>\r\n              <button\r\n                className=\"list disabled\"\r\n                id=\"run\"\r\n                onClick={() => props.run(algorithm)}\r\n              >\r\n                Run {algorithm}!\r\n              </button>\r\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                <NavDropdown title={\"Algorithms\"} id=\"nav-dropdown\">\r\n                  <NavDropdown.Item disabled=\"true\" href=\"#action/3.4\">\r\n                    Select an Algorithm\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Divider />\r\n                  <NavDropdown.Item\r\n                    onClick={() => setAlgo(\"Dijkstra\")}\r\n                    href=\"#action/3.1\"\r\n                  >\r\n                    Dijkstra\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item\r\n                    onClick={() => setAlgo(\"Breath First Search\")}\r\n                    href=\"#action/3.2\"\r\n                  >\r\n                    Breath First Search\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item\r\n                    onClick={() => setAlgo(\"Depth First Search\")}\r\n                    href=\"#action/3.3\"\r\n                  >\r\n                    Depth First Search\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./node.css\";\r\n\r\nexport default function node(props) {\r\n  let className = props.isStartNode\r\n    ? \"node startNode\"\r\n    : props.isFinishNode\r\n    ? \"node finishNode\"\r\n    : props.isWall\r\n    ? \"node wall\"\r\n    : \"node\";\r\n  return (\r\n    <div\r\n      onMouseUp={() => props.mouseUp()}\r\n      onMouseDown={() => props.mouseDown(props.row, props.col)}\r\n      onMouseEnter={() => props.mouseEnter(props.row, props.col)}\r\n      id={`${props.row}-${props.col}`}\r\n      className={className}\r\n    ></div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./option.css\";\r\n\r\nexport default function option() {\r\n  return <div className=\"option-container\">option</div>;\r\n}\r\n","export function Dijkstra(startNode, finishNode, map) {\r\n  let visitedNodes = [];\r\n  map[startNode.m][startNode.n].distance = 0;\r\n  let nodes = getAllNodes(map);\r\n  while (nodes.length > 0) {\r\n    nodes.sort((a, b) => {\r\n      return a.distance - b.distance;\r\n    });\r\n    let currentNode = nodes.shift();\r\n    if (!currentNode.visited) {\r\n      visitedNodes.push(currentNode);\r\n    }\r\n    if (currentNode.row === finishNode.m && currentNode.col === finishNode.n) {\r\n      let path = shortestPath(currentNode);\r\n      return { visitedNodes, path };\r\n    }\r\n    let neighbors = getNeighbors(currentNode, map);\r\n    neighbors.forEach((neighbor) => {\r\n      if (!neighbor.isWall) {\r\n        updateDistance(currentNode, neighbor);\r\n      }\r\n    });\r\n  }\r\n  let path = shortestPath(map[finishNode.m][finishNode.n]);\r\n  return { visitedNodes, path };\r\n}\r\n\r\nfunction getAllNodes(map) {\r\n  let newMap = [];\r\n  for (let i = 0; i < map.length; i++) {\r\n    for (let j = 0; j < map[0].length; j++) {\r\n      newMap.push(map[i][j]);\r\n    }\r\n  }\r\n  return newMap;\r\n}\r\n\r\nfunction getNeighbors(currentNode, map) {\r\n  let neighbors = [];\r\n  if (currentNode.row > 0) {\r\n    neighbors.push(map[currentNode.row - 1][currentNode.col]);\r\n  }\r\n  if (currentNode.row < map.length - 1) {\r\n    neighbors.push(map[currentNode.row + 1][currentNode.col]);\r\n  }\r\n  if (currentNode.col > 0) {\r\n    neighbors.push(map[currentNode.row][currentNode.col - 1]);\r\n  }\r\n  if (currentNode.col < map[0].length - 1) {\r\n    neighbors.push(map[currentNode.row][currentNode.col + 1]);\r\n  }\r\n  return neighbors;\r\n}\r\n\r\nfunction updateDistance(currentNode, neighbor) {\r\n  if (currentNode.distance + 1 < neighbor.distance) {\r\n    neighbor.distance = currentNode.distance + 1;\r\n    neighbor.previous = currentNode;\r\n  }\r\n}\r\n\r\nfunction shortestPath(finishNode) {\r\n  let path = [];\r\n  let pre = finishNode.previous;\r\n  while (pre !== null) {\r\n    path.push(pre);\r\n    pre = pre.previous;\r\n  }\r\n  return path.reverse();\r\n}\r\n","export function animate(paths) {\r\n  let { visitedNodes, path } = paths;\r\n  for (let i = 0; i < visitedNodes.length; i++) {\r\n    if (i === 0) {\r\n      continue;\r\n    }\r\n    setTimeout(() => {\r\n      if (i !== visitedNodes.length - 1) {\r\n        document.getElementById(\r\n          `${visitedNodes[i].row}-${visitedNodes[i].col}`\r\n        ).className = \"node visitedNode\";\r\n      }\r\n    }, i * 10);\r\n    setTimeout(() => {\r\n      if (i === visitedNodes.length - 1) {\r\n        animatePath(path);\r\n      }\r\n    }, i * 10);\r\n  }\r\n}\r\nfunction animatePath(path) {\r\n  for (let i = 0; i < path.length; i++) {\r\n    if (i === 0) {\r\n      continue;\r\n    }\r\n    setTimeout(() => {\r\n      document.getElementById(`${path[i].row}-${path[i].col}`).className =\r\n        \"node path\";\r\n    }, i * 30);\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./board.css\";\r\nimport Nav from \"../Navbar/Navbar\";\r\nimport Node from \"../Node/node\";\r\nimport Option from \"../Navbar/option\";\r\nimport { Dijkstra } from \"../Algorithms/Dijkstra\";\r\nimport { animate } from \"../animate\";\r\n\r\nexport default class Board extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      board_array: [],\r\n      mouseIsEntered: false,\r\n      startNode: {\r\n        m: Math.floor(\r\n          Math.floor(window.innerWidth / 28) / 2 -\r\n            Math.floor(window.innerWidth / 28) / 4\r\n        ),\r\n        n: Math.floor(Math.floor((window.innerHeight - 170) / 28) / 2),\r\n      },\r\n      finishNode: {\r\n        m: Math.floor(\r\n          Math.floor(window.innerWidth / 28) / 2 +\r\n            Math.floor(window.innerWidth / 28) / 4\r\n        ),\r\n        n: Math.floor(Math.floor((window.innerHeight - 170) / 28) / 2),\r\n      },\r\n      m: Math.floor(window.innerWidth / 28),\r\n      n: Math.floor((window.innerHeight - 170) / 28),\r\n    };\r\n    window.addEventListener(\"resize\", async () => {\r\n      this.setState({\r\n        startNode: {\r\n          m: Math.floor(\r\n            Math.floor(window.innerWidth / 25) / 2 -\r\n              Math.floor(window.innerWidth / 25) / 4\r\n          ),\r\n          n: Math.floor(Math.floor((window.innerHeight - 170) / 28) / 2),\r\n        },\r\n        finishNode: {\r\n          m: Math.floor(\r\n            Math.floor(window.innerWidth / 25) / 2 +\r\n              Math.floor(window.innerWidth / 25) / 4\r\n          ),\r\n          n: Math.floor(Math.floor((window.innerHeight - 170) / 28) / 2),\r\n        },\r\n        m: Math.floor(window.innerWidth / 28),\r\n        n: Math.floor((window.innerHeight - 170) / 28),\r\n      });\r\n      await this.reset();\r\n      this.resize();\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.reset();\r\n  }\r\n  reset() {\r\n    let m = this.state.m;\r\n    let n = this.state.n;\r\n    this.setState({\r\n      isMouseEntered: false,\r\n    });\r\n    let array = [];\r\n    for (let i = 0; i < m; i++) {\r\n      let m_array = [];\r\n      for (let j = 0; j < n; j++) {\r\n        m_array.push({\r\n          row: i,\r\n          col: j,\r\n          isWall: false,\r\n          isStartNode:\r\n            i === this.state.startNode.m && j === this.state.startNode.n,\r\n          isFinishNode:\r\n            i === this.state.finishNode.m && j === this.state.finishNode.n,\r\n          previous: null,\r\n          distance: Infinity,\r\n        });\r\n      }\r\n      array.push(m_array);\r\n    }\r\n    this.setState({\r\n      board_array: array,\r\n    });\r\n  }\r\n  clear() {\r\n    let m = this.state.m;\r\n    let n = this.state.n;\r\n    this.setState({\r\n      isMouseEntered: false,\r\n    });\r\n    let array = [];\r\n    for (let i = 0; i < m; i++) {\r\n      let m_array = [];\r\n      for (let j = 0; j < n; j++) {\r\n        m_array.push({\r\n          row: i,\r\n          col: j,\r\n          isWall: false,\r\n          isStartNode:\r\n            i === this.state.startNode.m && j === this.state.startNode.n,\r\n          isFinishNode:\r\n            i === this.state.finishNode.m && j === this.state.finishNode.n,\r\n          previous: null,\r\n          distance: Infinity,\r\n        });\r\n        if (i === this.state.startNode.m && j === this.state.startNode.n) {\r\n          document.getElementById(`${i}-${j}`).className = \"node startNode\";\r\n        } else if (\r\n          i === this.state.finishNode.m &&\r\n          j === this.state.finishNode.n\r\n        ) {\r\n          document.getElementById(`${i}-${j}`).className = \"node finishNode\";\r\n        } else {\r\n          document.getElementById(`${i}-${j}`).className = \"node\";\r\n        }\r\n      }\r\n      array.push(m_array);\r\n    }\r\n    this.setState({\r\n      board_array: array,\r\n    });\r\n  }\r\n  resize() {\r\n    for (let i = 0; i < this.state.m; i++) {\r\n      for (let j = 0; j < this.state.n; j++) {\r\n        if (i === this.state.startNode.m && j === this.state.startNode.n) {\r\n          document.getElementById(`${i}-${j}`).className = \"node startNode\";\r\n        } else if (\r\n          i === this.state.finishNode.m &&\r\n          j === this.state.finishNode.n\r\n        ) {\r\n          document.getElementById(`${i}-${j}`).className = \"node finishNode\";\r\n        } else {\r\n          document.getElementById(`${i}-${j}`).className = \"node\";\r\n        }\r\n      }\r\n    }\r\n  }\r\n  plotWall(m, n) {\r\n    let array = this.state.board_array;\r\n    let node = array[m][n];\r\n    let newNode = {\r\n      ...node,\r\n      isWall: !node.isWall,\r\n    };\r\n    array[m][n] = newNode;\r\n    return array;\r\n  }\r\n  mouseDown(m, n) {\r\n    let newArray = this.plotWall(m, n);\r\n    this.setState({\r\n      board_array: newArray,\r\n      mouseIsEntered: true,\r\n    });\r\n  }\r\n  mouseUp() {\r\n    this.setState({\r\n      mouseIsEntered: false,\r\n    });\r\n  }\r\n  mouseEnter(m, n) {\r\n    if (!this.state.mouseIsEntered) return;\r\n    let newArray = this.plotWall(m, n);\r\n    this.setState({\r\n      board_array: newArray,\r\n    });\r\n  }\r\n  run(algo) {\r\n    if (algo === \" \") {\r\n      return;\r\n    } else if (algo === \"Dijkstra\") {\r\n      let dijkstra = Dijkstra(\r\n        this.state.startNode,\r\n        this.state.finishNode,\r\n        this.state.board_array\r\n      );\r\n      animate(dijkstra);\r\n    } else if (algo === \"Breath First Search\") {\r\n      console.log(algo);\r\n    } else if (algo === \"Depth First Search\") {\r\n      console.log(algo);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Nav clear={() => this.clear()} run={(algo) => this.run(algo)} />\r\n        <Option />\r\n        <div className=\"col\">\r\n          {this.state.board_array.map((row, rowIdx) => {\r\n            return (\r\n              <div key={rowIdx} className=\"c\">\r\n                {row.map((col, colIdx) => {\r\n                  return (\r\n                    <Node\r\n                      row={rowIdx}\r\n                      col={colIdx}\r\n                      key={rowIdx - colIdx}\r\n                      mouseUp={() => this.mouseUp()}\r\n                      mouseEnter={(m, n) => this.mouseEnter(m, n)}\r\n                      mouseDown={(m, n) => this.mouseDown(m, n)}\r\n                      isWall={col.isWall}\r\n                      isStartNode={col.isStartNode}\r\n                      isFinishNode={col.isFinishNode}\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import \"./App.css\";\nimport Board from \"./board/board\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createContext } from \"react\";\r\n\r\nexport const context = createContext({\r\n  i: null,\r\n  j: null,\r\n  start_i: null,\r\n  start_j: null,\r\n  finish_i: null,\r\n  finish_j: null,\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { context } from \"./context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <context.Provider\n      value={{\n        i: null,\n        j: null,\n        start_i: null,\n        start_j: null,\n        finish_i: null,\n        finish_j: null,\n      }}\n    >\n      <App />\n    </context.Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}