{"version":3,"sources":["Navbar/Navbar.js","Node/node.js","Navbar/option.js","Algorithms/Dijkstra.js","animate.js","board/board.js","App.js","reportWebVitals.js","context.js","index.js"],"names":["Nav_bar","props","useState","algorithm","setAlgorithm","algoSelected","setAlgoSelected","canSet","setCanSet","setAlgo","algo","document","getElementById","classList","remove","add","useEffect","clearDisabled","Navbar","className","variant","expand","Brand","style","marginLeft","color","href","display","flexDirection","justifyContent","alignItems","id","onClick","clear","run","NavDropdown","title","Item","disabled","Divider","node","isStartNode","isFinishNode","isWall","onDragStart","dragged","row","col","onDragEnd","dragEnded","onDragLeaveCapture","dragLeaved","onMouseUp","mouseUp","onMouseDown","mouseDown","onMouseEnter","mouseEnter","option","shortestPath","finishNode","path","pre","previous","push","reverse","animate","paths","visitedNodes","i","setTimeout","length","alert","transform","animatePath","Board","state","board_array","mouseIsEntered","size","window","innerWidth","dragging","startNode","m","Math","floor","n","innerHeight","addEventListener","a","w","setState","reset","this","isMouseEntered","array","m_array","j","distance","Infinity","newNode","newArray","plotWall","dijkstra","map","nodes","newMap","getAllNodes","sort","b","currentNode","shift","visited","neighbors","getNeighbors","forEach","neighbor","updateDistance","Dijkstra","console","log","Fragment","rowIdx","colIdx","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","context","createContext","start_i","start_j","finish_i","finish_j","ReactDOM","render","StrictMode","Provider","value"],"mappings":"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","file":"static/js/main.31689acd.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Navbar, NavDropdown } from \"react-bootstrap\";\r\nimport \"./Navbar.css\";\r\n\r\nexport default function Nav_bar(props) {\r\n  const [algorithm, setAlgorithm] = useState(\"\");\r\n  const [algoSelected, setAlgoSelected] = useState(false);\r\n  const [canSet, setCanSet] = useState(true);\r\n  useEffect(() => {\r\n    if (props.clearDisabled) {\r\n      document.getElementById(\"clearDisabled\").classList.add(\"disabled\");\r\n      document.getElementById(\"run\").classList.add(\"disabled\");\r\n      setAlgoSelected(false);\r\n      setCanSet(false);\r\n    } else {\r\n      document.getElementById(\"clearDisabled\").classList.remove(\"disabled\");\r\n    }\r\n  }, [algoSelected, props]);\r\n  function setAlgo(algo) {\r\n    document.getElementById(\"run\").classList.remove(\"disabled\");\r\n    setAlgorithm(algo);\r\n    if (canSet) {\r\n      setAlgoSelected(true);\r\n    } else {\r\n      setAlgoSelected(false);\r\n      document.getElementById(\"run\").classList.add(\"disabled\");\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <Navbar className=\"navbar\" variant=\"k\" expand=\"lg\">\r\n        <div className=\"cont\">\r\n          <div>\r\n            <Navbar.Brand\r\n              className=\"title\"\r\n              style={{ marginLeft: \"20px\", color: \"white\" }}\r\n              href=\"#home\"\r\n            >\r\n              Pathfinding Visualizer\r\n            </Navbar.Brand>\r\n          </div>\r\n          <div className=\"buttons\">\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <button\r\n                className=\"list button\"\r\n                id=\"clearDisabled\"\r\n                onClick={() => {\r\n                  setCanSet(true);\r\n                  if (props.clearDisabled) {\r\n                    return;\r\n                  }\r\n                  props.clear();\r\n                  if (algorithm === \"\") {\r\n                    setAlgoSelected(false);\r\n                  } else if (algorithm !== \"\") {\r\n                    setAlgoSelected(true);\r\n                    document.getElementById(\"run\").classList.remove(\"disabled\");\r\n                  }\r\n                }}\r\n              >\r\n                Clear\r\n              </button>\r\n              <button\r\n                className=\"list disabled\"\r\n                id=\"run\"\r\n                onClick={() => props.run(algorithm, algoSelected)}\r\n              >\r\n                Run {algorithm}!\r\n              </button>\r\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                <NavDropdown title={\"Algorithms\"} id=\"nav-dropdown\">\r\n                  <NavDropdown.Item className=\"dropdown-list\" disabled=\"true\">\r\n                    Select an Algorithm\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Divider />\r\n                  <NavDropdown.Item\r\n                    className=\"dropdown-list\"\r\n                    onClick={() => setAlgo(\"Dijkstra\")}\r\n                  >\r\n                    Dijkstra\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item\r\n                    className=\"dropdown-list\"\r\n                    onClick={() => setAlgo(\"Breath First Search\")}\r\n                  >\r\n                    Breath First Search\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item\r\n                    className=\"dropdown-list\"\r\n                    onClick={() => setAlgo(\"Depth First Search\")}\r\n                  >\r\n                    Depth First Search\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./node.css\";\r\n\r\nexport default function node(props) {\r\n  let className = props.isStartNode\r\n    ? \"node startNode\"\r\n    : props.isFinishNode\r\n    ? \"node finishNode\"\r\n    : props.isWall\r\n    ? \"node wall\"\r\n    : \"node\";\r\n  return (\r\n    <div\r\n      onDragStart={() => props.dragged(props.row, props.col)}\r\n      onDragEnd={() => props.dragEnded()}\r\n      onDragLeaveCapture={() => props.dragLeaved(props.row, props.col)}\r\n      onMouseUp={() => props.mouseUp()}\r\n      onMouseDown={() => props.mouseDown(props.row, props.col)}\r\n      onMouseEnter={() => props.mouseEnter(props.row, props.col)}\r\n      id={`${props.row}-${props.col}`}\r\n      className={className}\r\n    ></div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./option.css\";\r\n\r\nexport default function option() {\r\n  return (\r\n    <div className=\"option-container\">\r\n      <div className=\"title map\">Map</div>\r\n      <div className=\"options\">\r\n        <div className=\"item\">\r\n          <div className=\"node startNode i\"></div> : StartNode\r\n        </div>\r\n        <div className=\"item\">\r\n          <div className=\"node finishNode i\"></div> : FinishNode\r\n        </div>\r\n        <div className=\"item\">\r\n          <div className=\"node wall i\"></div> : Wall\r\n        </div>\r\n        <div className=\"item\">\r\n          <div className=\"node unvisitedNode i\"></div> : unvisitedNode\r\n        </div>\r\n        <div className=\"item\">\r\n          <div className=\"node visitedNode i\"></div> : visitedNode\r\n        </div>\r\n        <div className=\"item\">\r\n          <div className=\"node path i\"></div> : Path\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export function Dijkstra(startNode, finishNode, map) {\r\n  let visitedNodes = [];\r\n  map[startNode.m][startNode.n].distance = 0;\r\n  let nodes = getAllNodes(map);\r\n  while (nodes.length > 0) {\r\n    nodes.sort((a, b) => {\r\n      return a.distance - b.distance;\r\n    });\r\n    let currentNode = nodes.shift();\r\n    if (currentNode.isWall) {\r\n      continue;\r\n    }\r\n    if (!currentNode.visited) {\r\n      visitedNodes.push(currentNode);\r\n    }\r\n    if (currentNode.distance === Infinity) {\r\n      let path = [];\r\n      return { visitedNodes, path };\r\n    }\r\n    if (currentNode.row === finishNode.m && currentNode.col === finishNode.n) {\r\n      let path = shortestPath(currentNode);\r\n      return { visitedNodes, path };\r\n    }\r\n    let neighbors = getNeighbors(currentNode, map);\r\n    neighbors.forEach((neighbor) => {\r\n      if (!neighbor.isWall) {\r\n        updateDistance(currentNode, neighbor);\r\n      }\r\n    });\r\n  }\r\n  let path = shortestPath(map[finishNode.m][finishNode.n]);\r\n  return { visitedNodes, path };\r\n}\r\n\r\nfunction getAllNodes(map) {\r\n  let newMap = [];\r\n  for (let i = 0; i < map.length; i++) {\r\n    for (let j = 0; j < map[0].length; j++) {\r\n      newMap.push(map[i][j]);\r\n    }\r\n  }\r\n  return newMap;\r\n}\r\n\r\nfunction getNeighbors(currentNode, map) {\r\n  let neighbors = [];\r\n  if (currentNode.row > 0) {\r\n    neighbors.push(map[currentNode.row - 1][currentNode.col]);\r\n  }\r\n  if (currentNode.row < map.length - 1) {\r\n    neighbors.push(map[currentNode.row + 1][currentNode.col]);\r\n  }\r\n  if (currentNode.col > 0) {\r\n    neighbors.push(map[currentNode.row][currentNode.col - 1]);\r\n  }\r\n  if (currentNode.col < map[0].length - 1) {\r\n    neighbors.push(map[currentNode.row][currentNode.col + 1]);\r\n  }\r\n  return neighbors;\r\n}\r\n\r\nfunction updateDistance(currentNode, neighbor) {\r\n  if (currentNode.distance + 1 < neighbor.distance) {\r\n    neighbor.distance = currentNode.distance + 1;\r\n    neighbor.previous = currentNode;\r\n  }\r\n}\r\n\r\nfunction shortestPath(finishNode) {\r\n  let path = [];\r\n  let pre = finishNode.previous;\r\n  while (pre !== null) {\r\n    path.push(pre);\r\n    pre = pre.previous;\r\n  }\r\n  return path.reverse();\r\n}\r\n","export function animate(paths) {\r\n  let { visitedNodes, path } = paths;\r\n  for (let i = 0; i < visitedNodes.length; i++) {\r\n    if (i === 0) {\r\n      continue;\r\n    }\r\n    setTimeout(() => {\r\n      if (i !== visitedNodes.length - 1) {\r\n        document.getElementById(\r\n          `${visitedNodes[i].row}-${visitedNodes[i].col}`\r\n        ).className = \"node visitedNode\";\r\n      }\r\n    }, i * 10);\r\n    setTimeout(() => {\r\n      if (i === visitedNodes.length - 1) {\r\n        animatePath(path);\r\n      }\r\n    }, i * 10);\r\n  }\r\n}\r\nfunction animatePath(path) {\r\n  if (path.length === 0) {\r\n    alert(\"No Way found!\");\r\n  }\r\n  for (let i = 0; i < path.length; i++) {\r\n    if (i === 0) {\r\n      continue;\r\n    }\r\n    setTimeout(() => {\r\n      document.getElementById(`${path[i].row}-${path[i].col}`).className =\r\n        \"node path\";\r\n    }, i * 30);\r\n    if (i === 1) {\r\n      if (path[i].row > path[0].row) {\r\n        document.getElementById(\r\n          `${path[0].row}-${path[0].col}`\r\n        ).style.transform = \"rotate(0deg)\";\r\n      } else if (path[i].row < path[0].row) {\r\n        document.getElementById(\r\n          `${path[0].row}-${path[0].col}`\r\n        ).style.transform = \"rotate(180deg)\";\r\n      } else if (path[i].col > path[0].col) {\r\n        document.getElementById(\r\n          `${path[0].row}-${path[0].col}`\r\n        ).style.transform = \"rotate(90deg)\";\r\n      } else if (path[i].col < path[0].col) {\r\n        document.getElementById(\r\n          `${path[0].row}-${path[0].col}`\r\n        ).style.transform = \"rotate(270deg)\";\r\n      }\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./board.css\";\r\nimport Nav from \"../Navbar/Navbar\";\r\nimport Node from \"../Node/node\";\r\nimport Option from \"../Navbar/option\";\r\nimport { Dijkstra } from \"../Algorithms/Dijkstra\";\r\nimport { animate } from \"../animate\";\r\n\r\nexport default class Board extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      board_array: [],\r\n      mouseIsEntered: false,\r\n      size: window.innerWidth <= 700 ? 22 : 28,\r\n      dragging: \"\",\r\n      startNode: {\r\n        m: Math.floor(\r\n          Math.floor(window.innerWidth / (window.innerWidth <= 700 ? 22 : 28)) /\r\n            2 -\r\n            Math.floor(\r\n              window.innerWidth / (window.innerWidth <= 700 ? 22 : 28)\r\n            ) /\r\n              4\r\n        ),\r\n        n: Math.floor(\r\n          Math.floor(\r\n            (window.innerHeight - 170) / (window.innerWidth <= 700 ? 22 : 28)\r\n          ) / 2\r\n        ),\r\n      },\r\n      finishNode: {\r\n        m: Math.floor(\r\n          Math.floor(window.innerWidth / (window.innerWidth <= 700 ? 22 : 28)) /\r\n            2 +\r\n            Math.floor(\r\n              window.innerWidth / (window.innerWidth <= 700 ? 22 : 28)\r\n            ) /\r\n              4\r\n        ),\r\n        n: Math.floor(\r\n          Math.floor(\r\n            (window.innerHeight - 170) / (window.innerWidth <= 700 ? 22 : 28)\r\n          ) / 2\r\n        ),\r\n      },\r\n      m: Math.floor(window.innerWidth / (window.innerWidth <= 700 ? 22 : 28)),\r\n      n: Math.floor(\r\n        (window.innerHeight - 170) / (window.innerWidth <= 700 ? 22 : 28)\r\n      ),\r\n      clearDisabled: false,\r\n    };\r\n    window.addEventListener(\"resize\", async () => {\r\n      let w = 28;\r\n      if (window.innerWidth <= 700) {\r\n        w = 22;\r\n      }\r\n      this.setState({\r\n        startNode: {\r\n          m: Math.floor(\r\n            Math.floor(window.innerWidth / w) / 2 -\r\n              Math.floor(window.innerWidth / w) / 4\r\n          ),\r\n          n: Math.floor(Math.floor((window.innerHeight - 170) / w) / 2),\r\n        },\r\n        finishNode: {\r\n          m: Math.floor(\r\n            Math.floor(window.innerWidth / w) / 2 +\r\n              Math.floor(window.innerWidth / w) / 4\r\n          ),\r\n          n: Math.floor(Math.floor((window.innerHeight - 170) / w) / 2),\r\n        },\r\n        m: Math.floor(window.innerWidth / w),\r\n        n: Math.floor((window.innerHeight - 170) / w),\r\n        size: w,\r\n      });\r\n      this.reset();\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.reset();\r\n  }\r\n  reset() {\r\n    let m = this.state.m;\r\n    let n = this.state.n;\r\n    this.setState({\r\n      isMouseEntered: false,\r\n    });\r\n    let array = [];\r\n    for (let i = 0; i < m; i++) {\r\n      let m_array = [];\r\n      for (let j = 0; j < n; j++) {\r\n        m_array.push({\r\n          row: i,\r\n          col: j,\r\n          isWall: false,\r\n          isStartNode:\r\n            i === this.state.startNode.m && j === this.state.startNode.n,\r\n          isFinishNode:\r\n            i === this.state.finishNode.m && j === this.state.finishNode.n,\r\n          previous: null,\r\n          distance: Infinity,\r\n        });\r\n      }\r\n      array.push(m_array);\r\n    }\r\n    this.setState({\r\n      board_array: array,\r\n      mouseIsEntered: false,\r\n    });\r\n  }\r\n  clear() {\r\n    let m = this.state.m;\r\n    let n = this.state.n;\r\n    let array = [];\r\n    for (let i = 0; i < m; i++) {\r\n      let m_array = [];\r\n      for (let j = 0; j < n; j++) {\r\n        m_array.push({\r\n          row: i,\r\n          col: j,\r\n          isWall: false,\r\n          isStartNode:\r\n            i === this.state.startNode.m && j === this.state.startNode.n,\r\n          isFinishNode:\r\n            i === this.state.finishNode.m && j === this.state.finishNode.n,\r\n          previous: null,\r\n          distance: Infinity,\r\n        });\r\n        if (i === this.state.startNode.m && j === this.state.startNode.n) {\r\n          document.getElementById(`${i}-${j}`).className = \"node startNode\";\r\n        } else if (\r\n          i === this.state.finishNode.m &&\r\n          j === this.state.finishNode.n\r\n        ) {\r\n          document.getElementById(`${i}-${j}`).className = \"node finishNode\";\r\n        } else {\r\n          document.getElementById(`${i}-${j}`).className = \"node\";\r\n        }\r\n      }\r\n      array.push(m_array);\r\n    }\r\n    this.setState({\r\n      isMouseEntered: false,\r\n      board_array: array,\r\n    });\r\n  }\r\n\r\n  plotWall(m, n) {\r\n    let array = this.state.board_array;\r\n    let node = array[m][n];\r\n    let newNode = {\r\n      ...node,\r\n      isWall: !node.isWall,\r\n    };\r\n    array[m][n] = newNode;\r\n    return array;\r\n  }\r\n  mouseDown(m, n) {\r\n    let newArray = this.plotWall(m, n);\r\n    this.setState({\r\n      board_array: newArray,\r\n      mouseIsEntered: true,\r\n    });\r\n  }\r\n  mouseUp() {\r\n    this.setState({\r\n      mouseIsEntered: false,\r\n    });\r\n  }\r\n  mouseEnter(m, n) {\r\n    if (!this.state.mouseIsEntered) return;\r\n    let newArray = this.plotWall(m, n);\r\n    this.setState({\r\n      board_array: newArray,\r\n    });\r\n  }\r\n  run(algo, algoSelected) {\r\n    if (algoSelected === false) {\r\n      return;\r\n    }\r\n    if (algo === \" \") {\r\n      return;\r\n    } else if (algo === \"Dijkstra\") {\r\n      this.setState({\r\n        clearDisabled: true,\r\n      });\r\n      let dijkstra = Dijkstra(\r\n        this.state.startNode,\r\n        this.state.finishNode,\r\n        this.state.board_array\r\n      );\r\n      animate(dijkstra);\r\n      let { visitedNodes, path } = dijkstra;\r\n      setTimeout(() => {\r\n        this.setState({\r\n          clearDisabled: false,\r\n        });\r\n      }, visitedNodes.length * 10 + path.length * 10);\r\n    } else if (algo === \"Breath First Search\") {\r\n      console.log(algo);\r\n    } else if (algo === \"Depth First Search\") {\r\n      console.log(algo);\r\n    }\r\n  }\r\n  dragged(row, col) {\r\n    this.setState({\r\n      isMouseEntered: false,\r\n    });\r\n    if (row === this.state.startNode.m && col === this.state.startNode.n) {\r\n      this.setState({\r\n        dragging: \"startNode\",\r\n      });\r\n      let array = this.state.board_array;\r\n      array[row][col].startNode = false;\r\n      this.setState({\r\n        board_array: array,\r\n      });\r\n    } else if (\r\n      row === this.state.finishNode.m &&\r\n      col === this.state.finishNode.n\r\n    ) {\r\n      this.setState({\r\n        dragging: \"finishNode\",\r\n      });\r\n      let array = this.state.board_array;\r\n      array[row][col].finishNode = false;\r\n      this.setState({\r\n        board_array: array,\r\n      });\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n  dragLeaved(row, col) {\r\n    let array = this.state.board_array;\r\n    let node = array[row][col];\r\n    if (this.state.dragging === \"startNode\") {\r\n      if (this.state)\r\n        document.getElementById(\r\n          `${this.state.startNode.m}-${this.state.startNode.n}`\r\n        ).className = \"node\";\r\n      let newNode = {\r\n        ...node,\r\n        startNode: true,\r\n      };\r\n      node = newNode;\r\n      array[row][col] = newNode;\r\n      this.setState({\r\n        startNode: {\r\n          m: row,\r\n          n: col,\r\n        },\r\n        board_array: array,\r\n        mouseIsEntered: false,\r\n      });\r\n      document.getElementById(`${row}-${col}`).className = \"startNode node\";\r\n    } else if (this.state.dragging === \"finishNode\") {\r\n      document.getElementById(\r\n        `${this.state.finishNode.m}-${this.state.finishNode.n}`\r\n      ).className = \"node\";\r\n      let newNode = {\r\n        ...node,\r\n        finishNode: true,\r\n      };\r\n      node = newNode;\r\n      array[row][col] = newNode;\r\n      this.setState({\r\n        finishNode: {\r\n          m: row,\r\n          n: col,\r\n        },\r\n        board_array: array,\r\n        mouseIsEntered: false,\r\n      });\r\n      document.getElementById(`${row}-${col}`).className = \"finishNode node\";\r\n    }\r\n  }\r\n  dragEnded() {\r\n    this.setState({\r\n      dragging: \"\",\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Nav\r\n          clear={() => this.clear()}\r\n          run={(algo, algoSelected) => this.run(algo, algoSelected)}\r\n          clearDisabled={this.state.clearDisabled}\r\n        />\r\n        <Option />\r\n        <div className=\"col\">\r\n          {this.state.board_array.map((row, rowIdx) => {\r\n            return (\r\n              <div key={rowIdx} className=\"c\">\r\n                {row.map((col, colIdx) => {\r\n                  return (\r\n                    <Node\r\n                      row={rowIdx}\r\n                      col={colIdx}\r\n                      key={rowIdx - colIdx}\r\n                      mouseUp={() => this.mouseUp()}\r\n                      mouseEnter={(m, n) => this.mouseEnter(m, n)}\r\n                      mouseDown={(m, n) => this.mouseDown(m, n)}\r\n                      isWall={col.isWall}\r\n                      isStartNode={col.isStartNode}\r\n                      isFinishNode={col.isFinishNode}\r\n                      dragged={(row, col) => this.dragged(row, col)}\r\n                      dragLeaved={(row, col) => this.dragLeaved(row, col)}\r\n                      dragEnded={() => this.dragEnded()}\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import \"./App.css\";\nimport Board from \"./board/board\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createContext } from \"react\";\r\n\r\nexport const context = createContext({\r\n  i: null,\r\n  j: null,\r\n  start_i: null,\r\n  start_j: null,\r\n  finish_i: null,\r\n  finish_j: null,\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { context } from \"./context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <context.Provider\n      value={{\n        i: null,\n        j: null,\n        start_i: null,\n        start_j: null,\n        finish_i: null,\n        finish_j: null,\n      }}\n    >\n      <App />\n    </context.Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}